"use strict";(()=>{var e={};e.id=4194,e.ids=[4194],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},73292:e=>{e.exports=require("fs/promises")},41808:e=>{e.exports=require("net")},71017:e=>{e.exports=require("path")},77282:e=>{e.exports=require("process")},12781:e=>{e.exports=require("stream")},71576:e=>{e.exports=require("string_decoder")},39512:e=>{e.exports=require("timers")},24404:e=>{e.exports=require("tls")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},61908:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>N,patchFetch:()=>j,requestAsyncStorage:()=>f,routeModule:()=>x,serverHooks:()=>q,staticGenerationAsyncStorage:()=>g});var a={};t.r(a),t.d(a,{DELETE:()=>m,GET:()=>c,PUT:()=>l});var i=t(49303),r=t(88716),u=t(60670),n=t(87070),o=t(8852),d=t(73292),p=t(71017);async function c(e,{params:s}){try{let e=parseInt(s.id);if(isNaN(e))return n.NextResponse.json({success:!1,message:"Invalid media ID"},{status:400});let t=await o.uu.getMediaFileById(e);if(!t)return n.NextResponse.json({success:!1,message:"Media file not found"},{status:404});return n.NextResponse.json({success:!0,data:t})}catch(e){return n.NextResponse.json({success:!1,message:"Failed to fetch media file"},{status:500})}}async function l(e,{params:s}){try{let t=parseInt(s.id);if(isNaN(t))return n.NextResponse.json({success:!1,message:"Invalid media ID"},{status:400});let a=await e.json();if(!await o.uu.getMediaFileById(t))return n.NextResponse.json({success:!1,message:"Media file not found"},{status:404});if(!await o.uu.updateMediaFile(t,a))return n.NextResponse.json({success:!1,message:"Failed to update media file"},{status:500});let i=await o.uu.getMediaFileById(t);return n.NextResponse.json({success:!0,data:i,message:"Media file updated successfully"})}catch(e){return n.NextResponse.json({success:!1,message:"Failed to update media file"},{status:500})}}async function m(e,{params:s}){try{let e=parseInt(s.id);if(isNaN(e))return n.NextResponse.json({success:!1,message:"Invalid media ID"},{status:400});let t=await o.uu.getMediaFileById(e);if(!t)return n.NextResponse.json({success:!1,message:"Media file not found"},{status:404});if(!await o.uu.deleteMediaFile(e))return n.NextResponse.json({success:!1,message:"Failed to delete media file from database"},{status:500});try{let e=(0,p.join)(process.cwd(),"public",t.file_path);await (0,d.unlink)(e)}catch(e){}return n.NextResponse.json({success:!0,message:"Media file deleted successfully"})}catch(e){return n.NextResponse.json({success:!1,message:"Failed to delete media file"},{status:500})}}let x=new i.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/admin/media/[id]/route",pathname:"/api/admin/media/[id]",filename:"route",bundlePath:"app/api/admin/media/[id]/route"},resolvedPagePath:"C:\\Users\\Berlin\\Desktop\\sssq-main\\sssq-main\\app\\api\\admin\\media\\[id]\\route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:f,staticGenerationAsyncStorage:g,serverHooks:q}=x,N="/api/admin/media/[id]/route";function j(){return(0,u.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:g})}}};var s=require("../../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),a=s.X(0,[8948,5972,3785,5802],()=>t(61908));module.exports=a})();